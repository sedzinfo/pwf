py_install("openpyxl")
################################################################################
# LOAD
################################################################################
library(reticulate)
directory<-paste0(dirname(rstudioapi::getActiveDocumentContext()$path),"/")
reticulate::py_run_string(paste0("path_script = '", directory, "'"))
system2("R", "--version")
reticulate::py_config()
py_install("openpyxl")
reticulate::repl_python()
model<-psych::fa(mtcars,nfactors=2,rotate="oblimin",fm="pa",oblique.scores=TRUE)
model_loadings(model=model,cut=NULL,matrix_type="pattern")
library(workingfunctions)
model<-psych::fa(mtcars,nfactors=2,rotate="oblimin",fm="pa",oblique.scores=TRUE)
model_loadings(model=model,cut=NULL,matrix_type="pattern")
model_loadings(model=model,cut=0.4,matrix_type="structure")
model_loadings(model=model,cut=0.4,matrix_type="all",sort=FALSE)
##########################################################################################
#' @title Residuals for matrices
#' @description Root Mean Squared Residual Number of absolute residuals > 0.05  Proportion of absolute residuals > 0.05. It can either accept a psych EFA model or it can compare two correlation or covariance matrices
#' @param model psych EFA model. It has to be a correlation or covariance matrix if data is not NULL
#' @param data correlation or covariance matrix
#' @keywords EFA
#' @export
#' @examples
#' model<-psych::fa(mtcars,nfactors=2,rotate="oblimin",fm="pa",oblique.scores=TRUE)
#' compute_residual_stats(model)
compute_residual_stats<-function(model,data=NULL) {
if(!is.null(data))
residuals<-model-data
else
residuals<-as.matrix(model$residual[upper.tri(model$residual)])
large_residuals<-abs(residuals)>0.05
n_large_residuals<-sum(large_residuals)
propLargeResid<-n_large_residuals/nrow(residuals)
rmsr<-sqrt(mean(residuals^2))
result<-data.frame(residual_statistics=c("Root Mean Squared Residual",
"Number of absolute residuals > 0.05",
"Proportion of absolute residuals > 0.05"),
value=c(rmsr,n_large_residuals,propLargeResid),
critical=c(NA,NA,.5),
formula=c("sqrt(mean(residuals^2))",
"abs(residuals)>0.05",
"numberLargeResiduals/nrow(residuals)"))
return(result)
}
model<-psych::fa(mtcars,nfactors=2,rotate="oblimin",fm="pa",oblique.scores=TRUE)
compute_residual_stats(model)
model<-psych::fa(mtcars,nfactors=2,rotate="oblimin",fm="pa",oblique.scores=TRUE)
plot_loadings(model=model,matrix_type="structure")
plot_loadings(model=model,matrix_type="pattern")
cm<-matrix(c(1,.8,.8,.1,.1,.1,
.8,1,.8,.1,.1,.1,
.8,.8,1,.1,.1,.1,
.1,.1,.1,1,.8,.8,
.1,.1,.1,.8,1,.8,
.1,.1,.1,.8,.8,1),
ncol=6,nrow=6)
plot_loadings(model=model,matrix_type="pattern")
reticulate::repl_python()
